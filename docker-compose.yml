services:
  traefik:
    container_name: traefik
    # image: traefik:v1.7.33-alpine
    # image: traefik:3
    image: traefik:v2.10.1
    command:
        - "--log.level=DEBUG"
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--providers.docker.exposedbydefault=false"
        - "--entrypoints.web.address=:80"
#        - "--entrypoints.tcp.address=:5432"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    labels:
        - traefik.enable=true
        - traefik.port=8080
        - traefik.frontend.rule=Host:traefik.localhost
        - traefik.http.routers.myservice.rule=Host(`traefik.localhost`)
        - traefik.http.services.myservice.loadbalancer.server.port=8080
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    # para que funcione la soluciÃ³n *.localhost
    # network_mode: "host"
    networks:
      adhoc:
        ipv4_address: 172.60.0.11

  db:
    container_name: db
    image: ghcr.io/cloudnative-pg/postgresql:15-standard-bookworm
    ports:
      - 5432:5432
    restart: unless-stopped
    command: >
      bash -c "
        if [ ! -s /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
          initdb -D /var/lib/postgresql/data/pgdata --username=odoo --pwfile=<(echo odoo);
        fi &&
        echo 'host all all 0.0.0.0/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
        echo 'host all all ::/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
        exec postgres -c listen_addresses='*'
      "
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./pg_data:/var/lib/postgresql/data/pgdata
    networks:
      adhoc:
        ipv4_address: 172.60.0.4

  # # PG para Odoo 13
  # db13:
  #   container_name: db13
  #   image: ghcr.io/cloudnative-pg/postgresql:13
  #   ports:
  #     - 5413:5432
  #   restart: unless-stopped
  #   command: >
  #       bash -c "
  #         if [ ! -s /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
  #           initdb -D /var/lib/postgresql/data/pgdata --username=odoo --pwfile=<(echo odoo);
  #         fi &&
  #         echo 'host all all 0.0.0.0/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         echo 'host all all ::/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         exec postgres -c listen_addresses='*'
  #       "
  #   environment:
  #     - POSTGRES_USER=odoo
  #     - POSTGRES_PASSWORD=odoo
  #     - POSTGRES_DB=postgres
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #   volumes:
  #     - ./pg_data_v13:/var/lib/postgresql/data/pgdata
  #   networks:
  #     adhoc:
  #       ipv4_address: 172.60.0.23

  # PG para Odoo 15 y 16
  # db14:
  #   container_name: db14
  #   image: ghcr.io/cloudnative-pg/postgresql:14
  #   ports:
  #     - 5414:5432
  #   restart: unless-stopped
  #   command: >
  #       bash -c "
  #         if [ ! -s /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
  #           initdb -D /var/lib/postgresql/data/pgdata --username=odoo --pwfile=<(echo odoo);
  #         fi &&
  #         echo 'host all all 0.0.0.0/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         echo 'host all all ::/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         exec postgres -c listen_addresses='*'
  #       "
  #   environment:
  #     - POSTGRES_USER=odoo
  #     - POSTGRES_PASSWORD=odoo
  #     - POSTGRES_DB=postgres
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #   volumes:
  #     - ./pg_data_v14:/var/lib/postgresql/data/pgdata
  #   networks:
  #     adhoc:
  #       ipv4_address: 172.60.0.24

  # PG para Odoo 17 y 18
  # db15:
  #   container_name: db15
  #   image: ghcr.io/cloudnative-pg/postgresql:15-standard-bookworm
  #   ports:
  #     - 5415:5432
  #   restart: unless-stopped
  #   command: >
  #       bash -c "
  #         if [ ! -s /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
  #           initdb -D /var/lib/postgresql/data/pgdata --username=odoo --pwfile=<(echo odoo);
  #         fi &&
  #         echo 'host all all 0.0.0.0/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         echo 'host all all ::/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         exec postgres -c listen_addresses='*'
  #       "
  #   environment:
  #     - POSTGRES_USER=odoo
  #     - POSTGRES_PASSWORD=odoo
  #     - POSTGRES_DB=postgres
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #   volumes:
  #     - ./pg_data_v15:/var/lib/postgresql/data/pgdata
  #   networks:
  #     adhoc:
  #       ipv4_address: 172.60.0.25

  # # PG para Odoo v19 (version no verificada)
  # db16:
  #   container_name: db16
  #   image: ghcr.io/cloudnative-pg/postgresql:16-standard-bookworm
  #   ports:
  #     - 5416:5432
  #   restart: unless-stopped
  #   command: >
  #       bash -c "
  #         if [ ! -s /var/lib/postgresql/data/pgdata/PG_VERSION ]; then
  #           initdb -D /var/lib/postgresql/data/pgdata --username=odoo --pwfile=<(echo odoo);
  #         fi &&
  #         echo 'host all all 0.0.0.0/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         echo 'host all all ::/0 scram-sha-256' >> /var/lib/postgresql/data/pgdata/pg_hba.conf &&
  #         exec postgres -c listen_addresses='*'
  #       "
  #   environment:
  #     - POSTGRES_USER=odoo
  #     - POSTGRES_PASSWORD=odoo
  #     - POSTGRES_DB=postgres
  #     - PGDATA=/var/lib/postgresql/data/pgdata
  #   volumes:
  #     - ./pg_data_v16:/var/lib/postgresql/data/pgdata
  #   networks:
  #     adhoc:
  #       ipv4_address: 172.60.0.26

  aeroo:
    container_name: aeroo
    image: adhoc/aeroo-docs:9.5
    restart: on-failure
    networks:
      adhoc:
        ipv4_address: 172.60.0.3

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:latest
    restart: on-failure
    ports:
      - 8025:8025
    #   - 1025:1025
    networks:
      adhoc:
        ipv4_address: 172.60.0.2

  dns:
    container_name: dns
    image: cytopia/bind:alpine-0.30
    restart: unless-stopped
    environment:
      DNS_A: "*.odoo.localhost=172.60.0.11,*.adhoc.devops=${MINIKUBE_IP},*.cluster.local=${MINIKUBE_IP}"
      DNS_FORWARDER: 127.0.0.11,8.8.8.8,8.8.4.4
    networks:
      adhoc:
        ipv4_address: 172.60.0.10

networks:
  adhoc:
    external: true
  minikube:
    name: minikube
    external: true
